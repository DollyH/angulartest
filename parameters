1)	Type of Application. This will provide:
  a)	Security – clouds that offer security protocols, etc.
  b)	Domain / sector of the application, suitable for which deployment structure (public , private, hybrid)
    i)	Credit card information can’t be on public etc.
    ii)	Regulatory issues – Banking, government, etc
  c)	Mission-critical
  d)	Is tightly coupled architecture required? (Not suitable for cloud). Preferable - service oriented architecture
  e)	Is manual installation of application required?
2)	How many users will access the application at a time? (Capacity and Frequency of Use)
3)	Life-Cycle status
4)	Frequency of change (continuous development or integration)
5)	External dependencies
  a)	Open source or licensed – restrictions applicable for scalability and extra costs
  b)	OS, DBs, LDAP /etc. If accessing multiple databases, latency will occur – cloud not recommended
6)	Resources being used by the application (Tech perspective)
  1.	Sharing resources or not
  2.	Load balancing?
  3.	Providing dedicated resources? 
  4.	Memory for each instance
  5.	Hardware resources / scalability – CPU usage 
  6.	Network architecture – fixed IP hosting and routing for dynamic mgmt
  7.	Session state-> then paas not iaas
  8.	Parallel processing/scalability ? y/n
  9.	Does the application use local file system? If yes, then that can be a problem
7)	Cost  / investible / savings – request handling
  a)	Capacity 
  b)	Mobility – geographical availability
  c)	Application architecture / topology
